"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2019 BAIKAL AI Inc."""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _DictType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DictTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DictType.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    TOKEN_INDEX: _DictType.ValueType  # 0
    """기본 배포사전에 사용되는 포맷
    전송시에는 쓰이지 않는다.
    """
    WORD_LIST: _DictType.ValueType  # 1
    """고유명사나 복합명사를 표기할 때 사용한다."""
    WORD_LIST_COMPOUND: _DictType.ValueType  # 2
    """# 전송시에만 사용하고 실제로는 쓰이지 추론시에는 쓰이지 않는다."""

class DictType(_DictType, metaclass=_DictTypeEnumTypeWrapper):
    """사전의 종류"""

TOKEN_INDEX: DictType.ValueType  # 0
"""기본 배포사전에 사용되는 포맷
전송시에는 쓰이지 않는다.
"""
WORD_LIST: DictType.ValueType  # 1
"""고유명사나 복합명사를 표기할 때 사용한다."""
WORD_LIST_COMPOUND: DictType.ValueType  # 2
"""# 전송시에만 사용하고 실제로는 쓰이지 추론시에는 쓰이지 않는다."""
global___DictType = DictType

class DictSet(google.protobuf.message.Message):
    """메모리 상에서 복합명사나 고유명사를 처리하기 위해서 쓰는 사전
    사전이 map으로 쓰이는 이유는 메모리 상에서 빠르게 사전 데이터의 존재여부를 점검하기
    위한 목적이다.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    ITEMS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]: ...
    type: global___DictType.ValueType
    name: builtins.str
    def __init__(
        self,
        *,
        items: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
        type: global___DictType.ValueType = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items", b"items", "name", b"name", "type", b"type"]) -> None: ...

global___DictSet = DictSet

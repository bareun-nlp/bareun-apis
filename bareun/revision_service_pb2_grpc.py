# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bareun import revision_service_pb2 as bareun_dot_revision__service__pb2


class RevisionServiceStub(object):
    """다양한 목적에 맞는 문장 교정 서비스
    이 서비스는 다른 과금 체계를 가지므로 다양하게 재구성한다.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CorrectError = channel.unary_unary(
                '/bareun.RevisionService/CorrectError',
                request_serializer=bareun_dot_revision__service__pb2.CorrectErrorRequest.SerializeToString,
                response_deserializer=bareun_dot_revision__service__pb2.CorrectErrorResponse.FromString,
                )


class RevisionServiceServicer(object):
    """다양한 목적에 맞는 문장 교정 서비스
    이 서비스는 다른 과금 체계를 가지므로 다양하게 재구성한다.
    """

    def CorrectError(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RevisionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CorrectError': grpc.unary_unary_rpc_method_handler(
                    servicer.CorrectError,
                    request_deserializer=bareun_dot_revision__service__pb2.CorrectErrorRequest.FromString,
                    response_serializer=bareun_dot_revision__service__pb2.CorrectErrorResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bareun.RevisionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RevisionService(object):
    """다양한 목적에 맞는 문장 교정 서비스
    이 서비스는 다른 과금 체계를 가지므로 다양하게 재구성한다.
    """

    @staticmethod
    def CorrectError(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bareun.RevisionService/CorrectError',
            bareun_dot_revision__service__pb2.CorrectErrorRequest.SerializeToString,
            bareun_dot_revision__service__pb2.CorrectErrorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
